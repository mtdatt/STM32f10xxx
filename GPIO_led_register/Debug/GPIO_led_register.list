
nhay_led_register.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001f4  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000324  0800032c  0001032c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000324  08000324  0001032c  2**0
                  CONTENTS
  4 .ARM          00000000  08000324  08000324  0001032c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000324  0800032c  0001032c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000324  08000324  00010324  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000328  08000328  00010328  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001032c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800032c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800032c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0001032c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00010355  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000159  00000000  00000000  00010398  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000000d3  00000000  00000000  000104f1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000060  00000000  00000000  000105c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000003e  00000000  00000000  00010628  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00000fe2  00000000  00000000  00010666  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000516  00000000  00000000  00011648  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00003de6  00000000  00000000  00011b5e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000000d4  00000000  00000000  00015944  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004c  00000000  00000000  00015a18  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	0800030c 	.word	0x0800030c

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	0800030c 	.word	0x0800030c

08000170 <Config_GPIOC>:
	}
}



void Config_GPIOC(void){
 8000170:	b480      	push	{r7}
 8000172:	b083      	sub	sp, #12
 8000174:	af00      	add	r7, sp, #0
	uint32_t *ptr = (uint32_t *)RCC_APB2ENR;
 8000176:	4b0e      	ldr	r3, [pc, #56]	; (80001b0 <Config_GPIOC+0x40>)
 8000178:	607b      	str	r3, [r7, #4]
	*ptr |= (1 << IOPCEN);
 800017a:	687b      	ldr	r3, [r7, #4]
 800017c:	681b      	ldr	r3, [r3, #0]
 800017e:	f043 0210 	orr.w	r2, r3, #16
 8000182:	687b      	ldr	r3, [r7, #4]
 8000184:	601a      	str	r2, [r3, #0]
	ptr = (uint32_t *)GPIOC_CRH_ADDR;
 8000186:	4b0b      	ldr	r3, [pc, #44]	; (80001b4 <Config_GPIOC+0x44>)
 8000188:	607b      	str	r3, [r7, #4]
	*ptr |= (3 << MODE13); // PC13 là đầu ra tốc độ 10MHz va modee
 800018a:	687b      	ldr	r3, [r7, #4]
 800018c:	681b      	ldr	r3, [r3, #0]
 800018e:	f443 1240 	orr.w	r2, r3, #3145728	; 0x300000
 8000192:	687b      	ldr	r3, [r7, #4]
 8000194:	601a      	str	r2, [r3, #0]
	*ptr &= ~(3 << CNF13);
 8000196:	687b      	ldr	r3, [r7, #4]
 8000198:	681b      	ldr	r3, [r3, #0]
 800019a:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 800019e:	687b      	ldr	r3, [r7, #4]
 80001a0:	601a      	str	r2, [r3, #0]
	ptr = (uint32_t *)GPIOC_ODR_ADDR;
 80001a2:	4b05      	ldr	r3, [pc, #20]	; (80001b8 <Config_GPIOC+0x48>)
 80001a4:	607b      	str	r3, [r7, #4]
}
 80001a6:	bf00      	nop
 80001a8:	370c      	adds	r7, #12
 80001aa:	46bd      	mov	sp, r7
 80001ac:	bc80      	pop	{r7}
 80001ae:	4770      	bx	lr
 80001b0:	40021018 	.word	0x40021018
 80001b4:	40011004 	.word	0x40011004
 80001b8:	4001100c 	.word	0x4001100c

080001bc <Config_GPIOB>:

void Config_GPIOB(void){
 80001bc:	b480      	push	{r7}
 80001be:	b083      	sub	sp, #12
 80001c0:	af00      	add	r7, sp, #0
	uint32_t *ptr = (uint32_t *)RCC_APB2ENR;
 80001c2:	4b14      	ldr	r3, [pc, #80]	; (8000214 <Config_GPIOB+0x58>)
 80001c4:	607b      	str	r3, [r7, #4]
	*ptr |= (1 << IOPBEN);
 80001c6:	687b      	ldr	r3, [r7, #4]
 80001c8:	681b      	ldr	r3, [r3, #0]
 80001ca:	f043 0208 	orr.w	r2, r3, #8
 80001ce:	687b      	ldr	r3, [r7, #4]
 80001d0:	601a      	str	r2, [r3, #0]
	ptr = (uint32_t *)GPIOB_CRH_ADDR;
 80001d2:	4b11      	ldr	r3, [pc, #68]	; (8000218 <Config_GPIOB+0x5c>)
 80001d4:	607b      	str	r3, [r7, #4]
	*ptr &= ~(3 << MODE14); // PC14 là đầu vao
 80001d6:	687b      	ldr	r3, [r7, #4]
 80001d8:	681b      	ldr	r3, [r3, #0]
 80001da:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 80001de:	687b      	ldr	r3, [r7, #4]
 80001e0:	601a      	str	r2, [r3, #0]
	*ptr &= ~(3 << CNF14);
 80001e2:	687b      	ldr	r3, [r7, #4]
 80001e4:	681b      	ldr	r3, [r3, #0]
 80001e6:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 80001ea:	687b      	ldr	r3, [r7, #4]
 80001ec:	601a      	str	r2, [r3, #0]
	*ptr |= (2 << CNF14);
 80001ee:	687b      	ldr	r3, [r7, #4]
 80001f0:	681b      	ldr	r3, [r3, #0]
 80001f2:	f043 6200 	orr.w	r2, r3, #134217728	; 0x8000000
 80001f6:	687b      	ldr	r3, [r7, #4]
 80001f8:	601a      	str	r2, [r3, #0]
	ptr = (uint32_t *)GPIOB_ODR_ADDR;
 80001fa:	4b08      	ldr	r3, [pc, #32]	; (800021c <Config_GPIOB+0x60>)
 80001fc:	607b      	str	r3, [r7, #4]
	*ptr |= (1 << ODR14);
 80001fe:	687b      	ldr	r3, [r7, #4]
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	f443 4280 	orr.w	r2, r3, #16384	; 0x4000
 8000206:	687b      	ldr	r3, [r7, #4]
 8000208:	601a      	str	r2, [r3, #0]
}
 800020a:	bf00      	nop
 800020c:	370c      	adds	r7, #12
 800020e:	46bd      	mov	sp, r7
 8000210:	bc80      	pop	{r7}
 8000212:	4770      	bx	lr
 8000214:	40021018 	.word	0x40021018
 8000218:	40010c04 	.word	0x40010c04
 800021c:	40010c0c 	.word	0x40010c0c

08000220 <main>:

int main(void) {
 8000220:	b580      	push	{r7, lr}
 8000222:	b082      	sub	sp, #8
 8000224:	af00      	add	r7, sp, #0
	Config_GPIOC();
 8000226:	f7ff ffa3 	bl	8000170 <Config_GPIOC>
	Config_GPIOB();
 800022a:	f7ff ffc7 	bl	80001bc <Config_GPIOB>

    int ledState = 0;
 800022e:	2300      	movs	r3, #0
 8000230:	607b      	str	r3, [r7, #4]
//                GPIOC->BSRR |= GPIO_BSRR_BS13; // Bật LED
//            } else {
//                GPIOC->BSRR |= GPIO_BSRR_BR13; // Tắt LED
//            }
//        }
    	ptr = (uint32_t *)GPIOB_IDR_ADDR;
 8000232:	4b0d      	ldr	r3, [pc, #52]	; (8000268 <main+0x48>)
 8000234:	603b      	str	r3, [r7, #0]
    	if(!((*ptr >> IDR14) & 0x1))
 8000236:	683b      	ldr	r3, [r7, #0]
 8000238:	681b      	ldr	r3, [r3, #0]
 800023a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800023e:	2b00      	cmp	r3, #0
 8000240:	d108      	bne.n	8000254 <main+0x34>
    	{
    		ptr = (uint32_t *)GPIOC_ODR_ADDR;
 8000242:	4b0a      	ldr	r3, [pc, #40]	; (800026c <main+0x4c>)
 8000244:	603b      	str	r3, [r7, #0]
    		*ptr |= (1 << ODR13);
 8000246:	683b      	ldr	r3, [r7, #0]
 8000248:	681b      	ldr	r3, [r3, #0]
 800024a:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
 800024e:	683b      	ldr	r3, [r7, #0]
 8000250:	601a      	str	r2, [r3, #0]
 8000252:	e7ee      	b.n	8000232 <main+0x12>
    	}
    	else{
    		ptr = (uint32_t *)GPIOC_ODR_ADDR;
 8000254:	4b05      	ldr	r3, [pc, #20]	; (800026c <main+0x4c>)
 8000256:	603b      	str	r3, [r7, #0]
    		*ptr &= ~(1 << ODR13);
 8000258:	683b      	ldr	r3, [r7, #0]
 800025a:	681b      	ldr	r3, [r3, #0]
 800025c:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8000260:	683b      	ldr	r3, [r7, #0]
 8000262:	601a      	str	r2, [r3, #0]
    	ptr = (uint32_t *)GPIOB_IDR_ADDR;
 8000264:	e7e5      	b.n	8000232 <main+0x12>
 8000266:	bf00      	nop
 8000268:	40010c08 	.word	0x40010c08
 800026c:	4001100c 	.word	0x4001100c

08000270 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000270:	480d      	ldr	r0, [pc, #52]	; (80002a8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000272:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000274:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000278:	480c      	ldr	r0, [pc, #48]	; (80002ac <LoopForever+0x6>)
  ldr r1, =_edata
 800027a:	490d      	ldr	r1, [pc, #52]	; (80002b0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800027c:	4a0d      	ldr	r2, [pc, #52]	; (80002b4 <LoopForever+0xe>)
  movs r3, #0
 800027e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000280:	e002      	b.n	8000288 <LoopCopyDataInit>

08000282 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000282:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000284:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000286:	3304      	adds	r3, #4

08000288 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000288:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800028a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800028c:	d3f9      	bcc.n	8000282 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800028e:	4a0a      	ldr	r2, [pc, #40]	; (80002b8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000290:	4c0a      	ldr	r4, [pc, #40]	; (80002bc <LoopForever+0x16>)
  movs r3, #0
 8000292:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000294:	e001      	b.n	800029a <LoopFillZerobss>

08000296 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000296:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000298:	3204      	adds	r2, #4

0800029a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800029a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800029c:	d3fb      	bcc.n	8000296 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800029e:	f000 f811 	bl	80002c4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002a2:	f7ff ffbd 	bl	8000220 <main>

080002a6 <LoopForever>:

LoopForever:
  b LoopForever
 80002a6:	e7fe      	b.n	80002a6 <LoopForever>
  ldr   r0, =_estack
 80002a8:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 80002ac:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002b0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002b4:	0800032c 	.word	0x0800032c
  ldr r2, =_sbss
 80002b8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002bc:	2000001c 	.word	0x2000001c

080002c0 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002c0:	e7fe      	b.n	80002c0 <ADC1_2_IRQHandler>
	...

080002c4 <__libc_init_array>:
 80002c4:	b570      	push	{r4, r5, r6, lr}
 80002c6:	2600      	movs	r6, #0
 80002c8:	4d0c      	ldr	r5, [pc, #48]	; (80002fc <__libc_init_array+0x38>)
 80002ca:	4c0d      	ldr	r4, [pc, #52]	; (8000300 <__libc_init_array+0x3c>)
 80002cc:	1b64      	subs	r4, r4, r5
 80002ce:	10a4      	asrs	r4, r4, #2
 80002d0:	42a6      	cmp	r6, r4
 80002d2:	d109      	bne.n	80002e8 <__libc_init_array+0x24>
 80002d4:	f000 f81a 	bl	800030c <_init>
 80002d8:	2600      	movs	r6, #0
 80002da:	4d0a      	ldr	r5, [pc, #40]	; (8000304 <__libc_init_array+0x40>)
 80002dc:	4c0a      	ldr	r4, [pc, #40]	; (8000308 <__libc_init_array+0x44>)
 80002de:	1b64      	subs	r4, r4, r5
 80002e0:	10a4      	asrs	r4, r4, #2
 80002e2:	42a6      	cmp	r6, r4
 80002e4:	d105      	bne.n	80002f2 <__libc_init_array+0x2e>
 80002e6:	bd70      	pop	{r4, r5, r6, pc}
 80002e8:	f855 3b04 	ldr.w	r3, [r5], #4
 80002ec:	4798      	blx	r3
 80002ee:	3601      	adds	r6, #1
 80002f0:	e7ee      	b.n	80002d0 <__libc_init_array+0xc>
 80002f2:	f855 3b04 	ldr.w	r3, [r5], #4
 80002f6:	4798      	blx	r3
 80002f8:	3601      	adds	r6, #1
 80002fa:	e7f2      	b.n	80002e2 <__libc_init_array+0x1e>
 80002fc:	08000324 	.word	0x08000324
 8000300:	08000324 	.word	0x08000324
 8000304:	08000324 	.word	0x08000324
 8000308:	08000328 	.word	0x08000328

0800030c <_init>:
 800030c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800030e:	bf00      	nop
 8000310:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000312:	bc08      	pop	{r3}
 8000314:	469e      	mov	lr, r3
 8000316:	4770      	bx	lr

08000318 <_fini>:
 8000318:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800031a:	bf00      	nop
 800031c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800031e:	bc08      	pop	{r3}
 8000320:	469e      	mov	lr, r3
 8000322:	4770      	bx	lr
